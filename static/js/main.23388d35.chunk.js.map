{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","react_default","a","createElement","Fragment","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","concat","react_router_dom","to","title","aria-label","aria-current","aboutText","role","placeholder","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","heading","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","element","defaultProps","Alert","height","alert","word","str","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.23388d35.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props) {\r\n    \r\n    // const [myStyle, setMyStyle] = useState({\r\n    //     color : 'black',\r\n    //     backgroundColor : 'white'\r\n    // })\r\n    let myStyle = {\r\n        color : props.mode==='dark'?'white':'#13173a',\r\n        backgroundColor : props.mode==='dark'?'rgb(36, 74, 104)':'white'\r\n    }    \r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{backgroundColor : props.mode==='dark'?'#13173a':'white', color : props.mode==='dark'?'white':'#13173a'}}>\r\n                <h1 className=\"my-3\">About Us</h1> \r\n                <div className=\"accordion\" style={myStyle} id=\"accordionExample\">\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                            <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            <strong>Analyze your text</strong>\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\" style={myStyle}>\r\n                                 It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                            <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            <strong>Free to use</strong>\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\" style={myStyle}>\r\n                                This is the second item's accordion body.It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                            <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            <strong>Browser Compatible</strong>\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\" style={myStyle}>\r\n                                This is the third item's accordion body. It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"container my-4\">\r\n                    <button onClick={toggleStyle} type=\"button\" className=\"btn btn-primary\">{btntext}</button>\r\n                </div> */}\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <form className=\"d-flex\" role=\"search\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                        </form>\r\n                        <div className={`form-check form-switch mx-3 text-${props.mode==='light'?'dark':'light'}`}>\r\n                            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title : PropTypes.string.isRequired,\r\n    aboutText : PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title : 'Set title here', \r\n    aboutText : 'About'\r\n};\r\n\r\n\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log(\"uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Coverted to Uppercase!\",\"success\");\r\n    }\r\n    const handleLoClick = () => {\r\n        // console.log(\"Lowercase was clicked\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Coverted to Lowercase!\",\"success\");\r\n    }\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text copied!\",\"success\");\r\n    }\r\n    const handleClear = () => {\r\n        // console.log(\"Clear text\");\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text cleared!\",\"success\");\r\n    }\r\n    const handleSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed!\",\"success\");\r\n    }\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState('')\r\n    return (\r\n        <>\r\n            <div className='container' style={{color: props.mode==='dark'?'white':'#13173a'}}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text}  style={{backgroundColor: props.mode==='dark'?'transparent':'white', color: props.mode==='dark'?'white':'#13173a'}} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary my-1 mx-2\" disabled={text.length===0} onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary my-1 mx-2\" disabled={text.length===0} onClick={handleLoClick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary my-1 mx-2\" disabled={text.length===0} onClick={handleCopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary my-1 mx-2\" disabled={text.length===0} onClick={handleSpaces}>Remove Extra Spaces</button>\r\n                <button className=\"btn btn-primary my-1 mx-2\" disabled={text.length===0} onClick={handleClear}>Clear</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'grey'}}>\r\n                <h2>Your Text Summary</h2>\r\n                <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n                <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes Read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Nothing to preview.\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=> {\r\n        const str = word.toLowerCase();\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n            </div>}\r\n        </div>\r\n        \r\n  )\r\n}\r\n\r\nexport default Alert","import \"./App.css\";\nimport React, { useState } from 'react';\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const toggleMode = () => { \n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#13173a';\n      showAlert(\"Dark mode enabled\", \"success\");\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode enabled\", \"success\");\n    }\n\n  };\n  return (\n    <>\n      <Router>\n        {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" /> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          \n          {/* <TextForm showAlert={showAlert} heading=\"Enter your text below\" mode={mode} /> */}\n          <Routes>\n            <Route exact path=\"/about\" element={<About mode={mode} />}> </Route>\n            <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter your text below\" mode={mode} />}> </Route>\n          </Routes>\n\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}