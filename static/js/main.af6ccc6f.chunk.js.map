{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","placeholder","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","word","str","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"mMAIe,SAASA,EAAOC,GAC3B,OACIC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAS,kCAAAC,OAAoCN,EAAMO,KAA1C,QAAAD,OAAqDN,EAAMO,OACrEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACXJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAAeG,KAAK,KAAKR,EAAMS,OAC5CR,EAAAC,EAAAC,cAAA,UAAQE,UAAU,iBAAiBK,KAAK,SAASC,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBACxLd,EAAAC,EAAAC,cAAA,QAAME,UAAU,yBAEpBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BAA2BW,GAAG,0BACzCf,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mCACVJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACVJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,kBAAkBY,eAAa,OAAOT,KAAK,KAAxD,UAMRP,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAASa,KAAK,UAC1BjB,EAAAC,EAAAC,cAAA,SAAOE,UAAU,oBAAoBK,KAAK,SAASS,YAAY,SAASJ,aAAW,WACnFd,EAAAC,EAAAC,cAAA,UAAQE,UAAU,kBAAkBK,KAAK,UAAzC,WAEJT,EAAAC,EAAAC,cAAA,OAAKE,UAAS,oCAAAC,OAAmD,UAAbN,EAAMO,KAAe,OAAO,UAC5EN,EAAAC,EAAAC,cAAA,SAAOE,UAAU,mBAAmBe,QAASpB,EAAMqB,WAAYX,KAAK,WAAWQ,KAAK,SAASF,GAAG,2BAChGf,EAAAC,EAAAC,cAAA,SAAOE,UAAU,mBAAmBiB,QAAQ,0BAA5C,kBC1Bb,SAASC,EAASvB,GAC7B,IADoCwB,EAkCZC,mBAAS,IAlCGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAkC7BK,EAlC6BH,EAAA,GAkCvBI,EAlCuBJ,EAAA,GAmCpC,OACIzB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAY0B,MAAO,CAACC,MAAoB,SAAbhC,EAAMO,KAAc,QAAQ,YAClEN,EAAAC,EAAAC,cAAA,UAAKH,EAAMiC,SACXhC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAAA,YAAUE,UAAU,eAAe6B,MAAOL,EAAOE,MAAO,CAACI,gBAA8B,SAAbnC,EAAMO,KAAc,UAAU,QAASyB,MAAoB,SAAbhC,EAAMO,KAAc,QAAQ,WAAY6B,SAVzJ,SAACC,GAEpBP,EAAQO,EAAMC,OAAOJ,QAQiLlB,GAAG,QAAQuB,KAAK,OAE9MtC,EAAAC,EAAAC,cAAA,UAAQE,UAAU,uBAAuBe,QAzC/B,WAElB,IAAIoB,EAAUX,EAAKY,cACnBX,EAAQU,GACRxC,EAAM0C,UAAU,yBAAyB,aAqCjC,wBACAzC,EAAAC,EAAAC,cAAA,UAAQE,UAAU,uBAAuBe,QApC/B,WAElB,IAAIoB,EAAUX,EAAKc,cACnBb,EAAQU,GACRxC,EAAM0C,UAAU,yBAAyB,aAgCjC,wBACAzC,EAAAC,EAAAC,cAAA,UAAQE,UAAU,uBAAuBe,QA/BlC,WACf,IAAIS,EAAOe,SAASC,eAAe,SACnChB,EAAKiB,SACLC,UAAUC,UAAUC,UAAUpB,EAAKK,OACnClC,EAAM0C,UAAU,eAAe,aA2BvB,aACAzC,EAAAC,EAAAC,cAAA,UAAQE,UAAU,uBAAuBe,QApBhC,WACjB,IAAIoB,EAAUX,EAAKqB,MAAM,QACzBpB,EAAQU,EAAQW,KAAK,MACrBnD,EAAM0C,UAAU,wBAAwB,aAiBhC,uBACAzC,EAAAC,EAAAC,cAAA,UAAQE,UAAU,uBAAuBe,QA3BjC,WAGhBU,EADc,IAEd9B,EAAM0C,UAAU,gBAAgB,aAuBxB,UAEJzC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiB0B,MAAO,CAACC,MAAoB,SAAbhC,EAAMO,KAAc,QAAQ,SACvEN,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SAAI0B,EAAKqB,MAAM,KAAKE,OAApB,cAAuCvB,EAAKuB,OAA5C,eACAnD,EAAAC,EAAAC,cAAA,SAAI,KAAQ0B,EAAKqB,MAAM,KAAKE,OAA5B,iBACAnD,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAI0B,EAAKuB,OAAO,EAAEvB,EAAK,qCDbvC9B,EAAOsD,aAAe,CAClB5C,MAAQ,iBACR6C,UAAY,mBE9BDC,MAZf,SAAevD,GAKX,OACIA,EAAMwD,OAASvD,EAAAC,EAAAC,cAAA,OAAKE,UAAS,eAAAC,OAAiBN,EAAMwD,MAAM9C,KAA7B,gCAAiEQ,KAAK,SAC/FjB,EAAAC,EAAAC,cAAA,cANW,SAACsD,GAChB,IAAMC,EAAMD,EAAKd,cACjB,OAAOe,EAAIC,OAAO,GAAGlB,cAAgBiB,EAAIE,MAAM,GAIlCC,CAAW7D,EAAMwD,MAAM9C,OADrB,MACwCV,EAAMwD,MAAMM,MCiD5DC,MA9Cf,WAAe,IAAAvC,EACWC,mBAAS,SADpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNjB,EADMmB,EAAA,GACAsC,EADAtC,EAAA,GAAAuC,EAEaxC,mBAAS,MAFtByC,EAAAvC,OAAAC,EAAA,EAAAD,CAAAsC,EAAA,GAENT,EAFMU,EAAA,GAECC,EAFDD,EAAA,GAIPxB,EAAY,SAAC0B,EAAS1D,GAC1ByD,EAAS,CACPL,IAAKM,EACL1D,KAAMA,IAER2D,WAAW,WACTF,EAAS,OACR,OAeL,OACElE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAGIH,EAAAC,EAAAC,cAACJ,EAAD,CAAQU,MAAM,YAAYF,KAAMA,EAAMc,WAjBzB,WACJ,UAATd,GACFyD,EAAQ,QACRpB,SAAS0B,KAAKvC,MAAMI,gBAAkB,UACtCO,EAAU,oBAAqB,aAG/BsB,EAAQ,SACRpB,SAAS0B,KAAKvC,MAAMI,gBAAkB,QACtCO,EAAU,qBAAsB,eAS9BzC,EAAAC,EAAAC,cAACoE,EAAD,CAAOf,MAAOA,IACdvD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAEbJ,EAAAC,EAAAC,cAACoB,EAAD,CAAUmB,UAAWA,EAAWT,QAAQ,wBAAwB1B,KAAMA,OClCjEiE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAW1C,SAASC,eAAe,SACpD0C,OACHtF,EAAAC,EAAAC,cAACF,EAAAC,EAAMsF,WAAP,KACEvF,EAAAC,EAAAC,cAACsF,EAAD,QAOJjB","file":"static/js/main.af6ccc6f.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                            </li>\r\n                            {/* <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                            </li> */}\r\n                        </ul>\r\n                        <form className=\"d-flex\" role=\"search\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                        </form>\r\n                        <div className={`form-check form-switch mx-3 text-${props.mode==='light'?'dark':'light'}`}>\r\n                            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title : PropTypes.string.isRequired,\r\n    aboutText : PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title : 'Set title here', \r\n    aboutText : 'About text here'\r\n};\r\n\r\n\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log(\"uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Coverted to Uppercase!\",\"success\");\r\n    }\r\n    const handleLoClick = () => {\r\n        // console.log(\"Lowercase was clicked\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Coverted to Lowercase!\",\"success\");\r\n    }\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text copied!\",\"success\");\r\n    }\r\n    const handleClear = () => {\r\n        // console.log(\"Clear text\");\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text cleared!\",\"success\");\r\n    }\r\n    const handleSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed!\",\"success\");\r\n    }\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState('')\r\n    return (\r\n        <>\r\n            <div className='container' style={{color: props.mode==='dark'?'white':'#13173a'}}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text}  style={{backgroundColor: props.mode==='dark'?'#262a4b':'white', color: props.mode==='dark'?'white':'#13173a'}} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleSpaces}>Remove Extra Spaces</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleClear}>Clear</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'grey'}}>\r\n                <h2>Your Text Summary</h2>\r\n                <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n                <p>{0.008 * text.split(\" \").length} Minutes Read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Type something in the box above\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=> {\r\n        const str = word.toLowerCase();\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Alert","import \"./App.css\";\nimport React, { useState } from 'react';\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const toggleMode = () => { \n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#13173a';\n      showAlert(\"Dark mode enabled\", \"success\");\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode enabled\", \"success\");\n    }\n\n  };\n  return (\n    <>\n      {/* <Router> */}\n        {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" /> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          \n          <TextForm showAlert={showAlert} heading=\"Enter your text below\" mode={mode} />\n          {/* <Routes> */}\n            {/* <Route exact path=\"/about\" element={<About />}> </Route> */}\n            {/* <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter your text below\" mode={mode} />}> </Route> */}\n          {/* </Routes> */}\n\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}